@using MegaSchool1.Model
@using System.Web
@using MegaSchool1.ViewModel
@using OneOf
@using OneOf.Types
@inherits ComponentBase
@inject UISettings UI
@inject NavigationManager NavigationManager

<MudCard Outlined="true">
    <MudCardContent>
        <MudStack Spacing="3">
            <EmbeddedVideo Video="Video.MapT0(video => video.Video)" />
            @if (this.Url != null)
            {
                <MudStack Row="true">
                    <MudSpacer />
                    <MudText Align="Align.Center"><ExternalLink Href="@($"https://theotherstuff.github.io/iframe?url={HttpUtility.UrlEncode(Url)}")">@((MarkupString)(Description ?? string.Empty))</ExternalLink></MudText>
                    <MudSpacer />
                </MudStack>
            }
            else
            {
                <MudText Typo="Typo.body2" Align="Align.Center">@((MarkupString)(Description ?? string.Empty).Replace(Environment.NewLine, "<br/>"))</MudText>
            }
            @if (this.Duration != null)
            {
                <MudText Typo="Typo.body2" Align="Align.Center">@FormatTimeSpan(Duration.Value)</MudText>
            }
        </MudStack>
    </MudCardContent>
    <MudCardActions>
        <MudStack Row="true" Style="width:100%;">
            <MudSpacer />
            <MudStack>
                @if (QRCode.TryPickT0(out var qrCode, out _))
                {
                    <QRCode Content="@qrCode.Content" FileName="@qrCode.FileName" />
                }
                <Centered>
                    <MudStack>
                        <MudStack Row="true">
                            <MudSpacer />
                            <CopyContent TextToCopy="@EnglishTextToCopy" Tooltip="@EnglishTooltip" />
                            <MudPaper Class="d-flex align-center" Elevation="0">
                                <MudText Style="">(English)</MudText>
                            </MudPaper>
                            <WebShareContent TextToCopy="@EnglishTextToCopy" Tooltip="@EnglishTooltip" ImageUrl="@EnglishImageUrl" />
                            <MudSpacer />
                        </MudStack>
                        <MudStack Row="true">
                            <MudSpacer />
                            <CopyContent TextToCopy="@SpanishTextToCopy" Tooltip="@SpanishTooltip" />
                            <MudPaper Class="d-flex align-center" Elevation="0">
                                <MudText>(Español)</MudText>
                            </MudPaper>
                            <WebShareContent TextToCopy="@SpanishTextToCopy" Tooltip="@SpanishTooltip" ImageUrl="@SpanishImageUrl" />
                            <MudSpacer />
                        </MudStack>
                    </MudStack>
                </Centered>
            </MudStack>
            <MudSpacer />
        </MudStack>
    </MudCardActions>
</MudCard>
@code {
    [Parameter]
    public OneOf<Content, None> Content { get; set; } = new None();

    [Parameter]
    public OneOf<VideoViewModel, None> Video { get; set; } = new None();

    [Parameter]
    public string? Description { get; set; }

    [Parameter]
    public RenderFragment? DescriptionContent { get; set; }

    [Parameter]
    public string? EnglishTextToCopy { get; set; }

    [Parameter]
    public string? EnglishTooltip { get; set; }

    [Parameter]
    public string EnglishImageUrl { get; set; } = Constants.GetImageUrl(Image.MoneyChallengeLogo);

    [Parameter]
    public string? SpanishTextToCopy { get; set; }

    [Parameter]
    public string? SpanishTooltip { get; set; }

    [Parameter]
    public string SpanishImageUrl { get; set; } = Constants.GetImageUrl(Image.MoneyChallengeLogo);

    [Parameter]
    public string? Url { get; set; }

    [Parameter]
    public OneOf<(string Content, string FileName), None> QRCode { get; set; } = new None();

    [Parameter]
    public TimeSpan? Duration { get; set; }
    
    [Parameter]
    public OneOf<(string MemberId, string ReferralCode), None> CapturePage { get; set; } = new None();

    protected override void OnParametersSet()
    {
        if (this.Content.TryPickT0(out var content, out _))
        {
            var mapper = new Mappers();
            var englishDto = UI.EnglishLocale[content];
            var spanishDto = UI.SpanishLocale[content];
            var english = englishDto != null ? mapper.ShareableDtoToViewModel(englishDto) : new();
            var spanish = spanishDto != null ? mapper.ShareableDtoToViewModel(spanishDto) : english;

            this.Description = english.AppDescription;
            this.Video = english.Video;
            this.EnglishTextToCopy = CapturePage.Match(info => ShareableViewModel.CapturePageShareable(english, NavigationManager, Language.English, info.MemberId, info.ReferralCode), none => ShareableViewModel.VideoShareable(english));
            this.EnglishTooltip = "Copied!";
            this.EnglishImageUrl = Constants.GetImageUrl(english.ShareableImage);
            this.SpanishTextToCopy = CapturePage.Match(info => ShareableViewModel.CapturePageShareable(spanish, NavigationManager, Language.Spanish, info.MemberId, info.ReferralCode), none => ShareableViewModel.VideoShareable(spanish));
            this.SpanishTooltip = "Copied!";
            this.SpanishImageUrl = Constants.GetImageUrl(spanish.ShareableImage);
        }

        this.Duration = this.Video.Match(
            video => video.Duration,
            none => this.Duration);

        this.Url = this.Video.Match(
            video => CapturePage.Match(info => Constants.GetCapturePage(content, Language.English, NavigationManager, info.MemberId, info.ReferralCode), none => video.Video.MinimalistUrl()),
            none => this.Url);

        this.QRCode = CapturePage.MapT0(info => (this.Url!, $"{Content}-{info.MemberId}-{info.ReferralCode}.png"));
    }
}
