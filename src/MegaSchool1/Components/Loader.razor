@using OneOf
@inherits Components.ComponentBase

@if(!Loaded)
{
    <MudSkeleton SkeletonType="@SkeletonType" Height="@(HeightConverter(Height))" Width="@WidthConverter(Width)"/>
}
else
{
    @ChildContent
}

@code {
    [Parameter]
    public bool Loaded { get; set; }

    [Parameter]
    public OneOf<Pixel, Percentage, string?>? Height { get; set; } = "100px";

    [Parameter]
    public OneOf<Pixel, Percentage, string?>? Width { get; set; }

    [Parameter]
    public SkeletonType SkeletonType { get; set; } = SkeletonType.Rectangle;

    private static string? HeightConverter(OneOf<Pixel, Percentage, string?>? height) =>
        height?.Match(
            pixel => $"{pixel.Value}px",
            percentage => $"{percentage.Value}%",
            @string => @string);

    private static string? WidthConverter(OneOf<Pixel, Percentage, string?>? width) =>
        width?.Match(
            pixel => $"{pixel.Value}px",
            percentage => $"{percentage.Value}%",
            @string => @string);
}