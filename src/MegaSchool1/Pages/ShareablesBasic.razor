@page "/shareables"
@using MegaSchool1.Components
@using MegaSchool1.Model
@using MegaSchool1.ViewModel
@using Content = MegaSchool1.Model.Content
@using OneOf
@using OneOf.Types
@inherits Components.ComponentBase
@inject UISettings UI

<MudStack Spacing="3">
    <MudCard>
        <MudCardContent>
            <MudStack Spacing="3">
                <MudSelect T="Content" Label="Shareable" @bind-Value="_selectedShareable" ToStringFunc="@(content => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " "))" Variant="Variant.Outlined" Style="width:300px;">
                    @foreach (var content in new [] { Content.Membership, Content.Opportunity202407, Content.MoneyChallenge, Content.MoneyChallengeFAQ, Content.CreditRestoration, Content.HealthShare, Content.KeysToHomeOwnership, Content.TrustMyAssets, Content.RealEstatePros })
                    {
                        <MudSelectItem Value="@content" />
                    }
                </MudSelect>
                @ContentView(_selectedShareable)
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudDivider/>
    <Collapsable Title="GivBux Training">
        <MudCard>
            <MudCardContent>
                <MudStack Spacing="3">
                    <MudSelect T="Content" Label="Shareable" @bind-Value="_selectedGivBuxTraining" ToStringFunc="@(content => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " "))" Variant="Variant.Outlined" Style="width:300px;">
                        @foreach (var content in new [] { Content.GivBuxAccountSetup, Content.GivBuxUberDemo })
                        {
                            <MudSelectItem Value="@content" />
                        }
                    </MudSelect>
                    @ContentView(_selectedGivBuxTraining)
                </MudStack>
            </MudCardContent>
        </MudCard>
    </Collapsable>
</MudStack>
@code {
    private Content _selectedShareable = Content.Membership;
    private Content _selectedGivBuxTraining = Content.GivBuxAccountSetup;

    private RenderFragment ContentView(Content content) => __builder =>
    {
        var mapper = new Mappers();
        var englishDto = UI.EnglishLocale[content];
        var spanishDto = UI.SpanishLocale[content];
        var english = englishDto != null ? mapper.ShareableDtoToViewModel(englishDto) : new();
        OneOf<ShareableViewModel, None> spanish = spanishDto != null ? mapper.ShareableDtoToViewModel(spanishDto) : new None();

        @if (spanish.IsT0)
        {
            <ShareableVideoMultilingual Description="@english.AppDescription"
                                        TheVideo="@english.Video"
                                       
                                        EnglishTextToCopy="@($"{ShareableViewModel.VideoShareable(english)}")"
                                        EnglishTooltip="Copied!"
                                        EnglishImageUrl="@Constants.GetImageUrl(english.ShareableImage)"
                                        
                                        SpanishTextToCopy="@($"{ShareableViewModel.VideoShareable(spanish.AsT0)}")"
                                        SpanishTooltip="Copied"
                                        SpanishImageUrl="@Constants.GetImageUrl(spanish.AsT0.ShareableImage)" />
        }
        else
        {
            <ShareableVideo Description="@english.AppDescription"
                            Duration="@english.Video.Match(video => video.Duration, none => TimeSpan.Zero)"
                            Url="@english.Video.Match(video => video.Video.MinimalistUrl(), none => null)"
                            Video="@english.Video.MapT0(video => video.Video)"
                            TextToCopy="@($"{ShareableViewModel.VideoShareable(english)}")"
                            Tooltip="Copied!"
                            ImageUrl="@Constants.GetImageUrl(english.ShareableImage)" />
        }
    };
}
